version: '3.8'

services:
  app:
    image: ${REGISTRY_URL}/${IMAGE_NAME}:latest
    container_name: studymate-app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      # Docker Compose에서만 필요한 오버라이드
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=studymate
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TZ=Asia/Seoul
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./application.yml:/app/config/application.yml:ro
    restart: unless-stopped
    networks:
      - studymate-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: mysql:8.0
    container_name: studymate-mysql
    platform: linux/x86_64
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=studymate
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backups:/backups
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=1G
      --max-connections=200
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long_query_time=2
    restart: unless-stopped
    networks:
      - studymate-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: studymate-redis
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - studymate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 데이터베이스 백업 서비스
  db-backup:
    image: mysql:8.0
    container_name: studymate-backup
    depends_on:
      - db
    environment:
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=studymate
      - BACKUP_RETENTION_DAYS=7
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    command: >
      sh -c "
      apk add --no-cache dcron &&
      echo '0 2 * * * /backup.sh' | crontab - &&
      crond -f -l 2
      "
    restart: unless-stopped
    networks:
      - studymate-network

  # 모니터링 (선택사항)
  watchtower:
    image: containrrr/watchtower
    container_name: studymate-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/studymate-data/mysql
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/studymate-data/redis

networks:
  studymate-network:
    driver: bridge
    name: studymate-network